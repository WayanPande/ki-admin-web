/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DefaultLayoutRouteImport } from './routes/_default/_layout'
import { Route as AuthLayoutRouteImport } from './routes/_auth/_layout'
import { Route as DefaultLayoutIndexRouteImport } from './routes/_default/_layout/index'
import { Route as DefaultLayoutTodosRouteImport } from './routes/_default/_layout/todos'
import { Route as DefaultLayoutSignupRouteImport } from './routes/_default/_layout/signup'
import { Route as DefaultLayoutLoginRouteImport } from './routes/_default/_layout/login'
import { Route as AuthLayoutDashboardRouteImport } from './routes/_auth/_layout/dashboard'
import { Route as AuthLayoutPksIndexRouteImport } from './routes/_auth/_layout/pks/index'
import { Route as AuthLayoutMasterDataUserRouteImport } from './routes/_auth/_layout/master-data/user'
import { Route as AuthLayoutMasterDataInstansiRouteImport } from './routes/_auth/_layout/master-data/instansi'

const DefaultLayoutRoute = DefaultLayoutRouteImport.update({
  id: '/_default/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLayoutRoute = AuthLayoutRouteImport.update({
  id: '/_auth/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const DefaultLayoutIndexRoute = DefaultLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DefaultLayoutRoute,
} as any)
const DefaultLayoutTodosRoute = DefaultLayoutTodosRouteImport.update({
  id: '/todos',
  path: '/todos',
  getParentRoute: () => DefaultLayoutRoute,
} as any)
const DefaultLayoutSignupRoute = DefaultLayoutSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => DefaultLayoutRoute,
} as any)
const DefaultLayoutLoginRoute = DefaultLayoutLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => DefaultLayoutRoute,
} as any)
const AuthLayoutDashboardRoute = AuthLayoutDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthLayoutRoute,
} as any)
const AuthLayoutPksIndexRoute = AuthLayoutPksIndexRouteImport.update({
  id: '/pks/',
  path: '/pks/',
  getParentRoute: () => AuthLayoutRoute,
} as any)
const AuthLayoutMasterDataUserRoute =
  AuthLayoutMasterDataUserRouteImport.update({
    id: '/master-data/user',
    path: '/master-data/user',
    getParentRoute: () => AuthLayoutRoute,
  } as any)
const AuthLayoutMasterDataInstansiRoute =
  AuthLayoutMasterDataInstansiRouteImport.update({
    id: '/master-data/instansi',
    path: '/master-data/instansi',
    getParentRoute: () => AuthLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/dashboard': typeof AuthLayoutDashboardRoute
  '/login': typeof DefaultLayoutLoginRoute
  '/signup': typeof DefaultLayoutSignupRoute
  '/todos': typeof DefaultLayoutTodosRoute
  '/': typeof DefaultLayoutIndexRoute
  '/master-data/instansi': typeof AuthLayoutMasterDataInstansiRoute
  '/master-data/user': typeof AuthLayoutMasterDataUserRoute
  '/pks': typeof AuthLayoutPksIndexRoute
}
export interface FileRoutesByTo {
  '/dashboard': typeof AuthLayoutDashboardRoute
  '/login': typeof DefaultLayoutLoginRoute
  '/signup': typeof DefaultLayoutSignupRoute
  '/todos': typeof DefaultLayoutTodosRoute
  '/': typeof DefaultLayoutIndexRoute
  '/master-data/instansi': typeof AuthLayoutMasterDataInstansiRoute
  '/master-data/user': typeof AuthLayoutMasterDataUserRoute
  '/pks': typeof AuthLayoutPksIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth/_layout': typeof AuthLayoutRouteWithChildren
  '/_default/_layout': typeof DefaultLayoutRouteWithChildren
  '/_auth/_layout/dashboard': typeof AuthLayoutDashboardRoute
  '/_default/_layout/login': typeof DefaultLayoutLoginRoute
  '/_default/_layout/signup': typeof DefaultLayoutSignupRoute
  '/_default/_layout/todos': typeof DefaultLayoutTodosRoute
  '/_default/_layout/': typeof DefaultLayoutIndexRoute
  '/_auth/_layout/master-data/instansi': typeof AuthLayoutMasterDataInstansiRoute
  '/_auth/_layout/master-data/user': typeof AuthLayoutMasterDataUserRoute
  '/_auth/_layout/pks/': typeof AuthLayoutPksIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/dashboard'
    | '/login'
    | '/signup'
    | '/todos'
    | '/'
    | '/master-data/instansi'
    | '/master-data/user'
    | '/pks'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/dashboard'
    | '/login'
    | '/signup'
    | '/todos'
    | '/'
    | '/master-data/instansi'
    | '/master-data/user'
    | '/pks'
  id:
    | '__root__'
    | '/_auth/_layout'
    | '/_default/_layout'
    | '/_auth/_layout/dashboard'
    | '/_default/_layout/login'
    | '/_default/_layout/signup'
    | '/_default/_layout/todos'
    | '/_default/_layout/'
    | '/_auth/_layout/master-data/instansi'
    | '/_auth/_layout/master-data/user'
    | '/_auth/_layout/pks/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren
  DefaultLayoutRoute: typeof DefaultLayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_default/_layout': {
      id: '/_default/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DefaultLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/_layout': {
      id: '/_auth/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_default/_layout/': {
      id: '/_default/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DefaultLayoutIndexRouteImport
      parentRoute: typeof DefaultLayoutRoute
    }
    '/_default/_layout/todos': {
      id: '/_default/_layout/todos'
      path: '/todos'
      fullPath: '/todos'
      preLoaderRoute: typeof DefaultLayoutTodosRouteImport
      parentRoute: typeof DefaultLayoutRoute
    }
    '/_default/_layout/signup': {
      id: '/_default/_layout/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof DefaultLayoutSignupRouteImport
      parentRoute: typeof DefaultLayoutRoute
    }
    '/_default/_layout/login': {
      id: '/_default/_layout/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof DefaultLayoutLoginRouteImport
      parentRoute: typeof DefaultLayoutRoute
    }
    '/_auth/_layout/dashboard': {
      id: '/_auth/_layout/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthLayoutDashboardRouteImport
      parentRoute: typeof AuthLayoutRoute
    }
    '/_auth/_layout/pks/': {
      id: '/_auth/_layout/pks/'
      path: '/pks'
      fullPath: '/pks'
      preLoaderRoute: typeof AuthLayoutPksIndexRouteImport
      parentRoute: typeof AuthLayoutRoute
    }
    '/_auth/_layout/master-data/user': {
      id: '/_auth/_layout/master-data/user'
      path: '/master-data/user'
      fullPath: '/master-data/user'
      preLoaderRoute: typeof AuthLayoutMasterDataUserRouteImport
      parentRoute: typeof AuthLayoutRoute
    }
    '/_auth/_layout/master-data/instansi': {
      id: '/_auth/_layout/master-data/instansi'
      path: '/master-data/instansi'
      fullPath: '/master-data/instansi'
      preLoaderRoute: typeof AuthLayoutMasterDataInstansiRouteImport
      parentRoute: typeof AuthLayoutRoute
    }
  }
}

interface AuthLayoutRouteChildren {
  AuthLayoutDashboardRoute: typeof AuthLayoutDashboardRoute
  AuthLayoutMasterDataInstansiRoute: typeof AuthLayoutMasterDataInstansiRoute
  AuthLayoutMasterDataUserRoute: typeof AuthLayoutMasterDataUserRoute
  AuthLayoutPksIndexRoute: typeof AuthLayoutPksIndexRoute
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthLayoutDashboardRoute: AuthLayoutDashboardRoute,
  AuthLayoutMasterDataInstansiRoute: AuthLayoutMasterDataInstansiRoute,
  AuthLayoutMasterDataUserRoute: AuthLayoutMasterDataUserRoute,
  AuthLayoutPksIndexRoute: AuthLayoutPksIndexRoute,
}

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
)

interface DefaultLayoutRouteChildren {
  DefaultLayoutLoginRoute: typeof DefaultLayoutLoginRoute
  DefaultLayoutSignupRoute: typeof DefaultLayoutSignupRoute
  DefaultLayoutTodosRoute: typeof DefaultLayoutTodosRoute
  DefaultLayoutIndexRoute: typeof DefaultLayoutIndexRoute
}

const DefaultLayoutRouteChildren: DefaultLayoutRouteChildren = {
  DefaultLayoutLoginRoute: DefaultLayoutLoginRoute,
  DefaultLayoutSignupRoute: DefaultLayoutSignupRoute,
  DefaultLayoutTodosRoute: DefaultLayoutTodosRoute,
  DefaultLayoutIndexRoute: DefaultLayoutIndexRoute,
}

const DefaultLayoutRouteWithChildren = DefaultLayoutRoute._addFileChildren(
  DefaultLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
  DefaultLayoutRoute: DefaultLayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
